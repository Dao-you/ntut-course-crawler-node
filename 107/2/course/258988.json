[{"name":"賴冠廷","email":"ktlai@ntut.edu.tw","latestUpdate":"2019-02-13 11:58:50","objective":"1. 程式語言類別介紹 2.物件導向與資料抽象化3.類別與方法 4.訊息﹐實例與初始化 5.繼承 6.靜態與動態繫結 7.多型性 8.發展環境及工具 9. C++ Java Smalltalk 簡介10.應用程式實例介紹\n\nObject-oriented programming (OOP) is a programming paradigm based on the concept of \"objects\", which usually defined as “class” in programming language like C++ and Java. In this class we will introduce the basic concepts of OOP, such as object, class, encapsulation, inheritance, and polymorphism. Moreover, we will show you how the OOP framework is applied to real software system, and use Android as an example. Java is the primary language used in the class, but we will also cover OOP in C++. We hope this class will help you to understand OOP concepts as well as be ready for developing high-quality software.","schedule":"Concepts of Object-Oriented Programming (OOP)\n1. Introduction to Object Oriented Programming\n    Object, Class, Inheritance, Polymorphism\n2. OOP in C++\n* HW1 - OOP in C++ (10%)\n3. Java Basics and OOP in Java\n4. NetBeans &amp; Java Swing\n* HW2 - Simple Java GUI (10%)\n5. Debugging &amp; Unit Testing + GitHub\n6. OOP Encapsulation\n* HW3 – Tetris (10%)\n7. OOP Inheritance\n8. Design Patterns\n9. Midterm (20%)\n* Final Project Proposal\n10. Threading\n* HW4 – Multi-thread programming (10%)\n11. Presentation of Final Project Proposal\n\nOOP in Real Life\n12. Android Programming\n13. Intents &amp; Filters and Event Handling\n14. Activities and Layouts\n* HW5 - Simple Android APP (10%)\n15. Internet &amp; Socket programming\n* Bonus – Chat room (10%)\n\nAdvanced Topics\n16. 3D Game Programming using Unreal Engine\n17. C++ &amp; Blueprints\n\nFinal Project\n18. Final Project Demo \n* Final Project Report &amp; Code (30%)","scorePolicy":"Homework (50%)\nMidterm (20%)\nFinal project (30%)","materials":"Stanford CS108 Object Oriented System Design\nhttp://web.stanford.edu/class/archive/cs/cs108/cs108.1092/","foreignLanguageTextbooks":false}]
