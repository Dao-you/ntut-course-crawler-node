[{"name":"鄭有進","email":"yccheng@ntut.edu.tw","latestUpdate":"2019-02-14 13:53:14","objective":"透過原理解說與系統實作，使學生熟悉物件導向設計原理及C++/Python進階程式設計技術，內容含：1. C++ 物件模型 2. 類別與物件3. 建構者與解構者 4. 繼承 5. 虛擬函式與多型 6. 運算子溢載 7. 例外處理 8. 泛型程式設計 9. 標準模板程式庫 10. Python","schedule":"01 介紹 C++ 開發環境與作業繳交方式; Unit testing with CppUnitLite\n02 How to solve it - Example: applying how to solve it (math vector in C)\n03 Inner product round 1/Inner product round 2\n04 Inner product, round 3\n05 handling I/O \n06 Inner product, round 4: refactoring into object\n07 special member functions: default constructor, copy constructor, \n     destructor shallow copy, deep copy\n08 Convex polygon\n09 Midterm;\n    special member functions: copy assignment operator overloading; \n    return a reference to data member; encapsulation and delegation: \n    How do ConvexPolygon and Vector collaborate?\n10 How To Solve It: Delegation from ConvexPolygon to Vector Sorting \n    Vectors with STL sort\n11 Sorting Vertices of  a convex polygon; \n     Simple Factory vs constructor for convex polygon\n12 Polymorphism \n     Design: Overloading vs. overriding vs. template\n13 Programming with STL\n14 Python programming\n15 Python data structures\n16 Python examples\n17 More Python examples\n18 Final Exam","scorePolicy":"Homework 50%\nOnline Coding Tests X 3 (10%,  20%, 20%)","materials":"Reference:\nHTSI CPP: http://htsicpp.blogspot.tw/\nclass webpage: https://myweb.ntut.edu.tw/~yccheng/\nThink Python: https://greenteapress.com/wp/think-python-2e/","foreignLanguageTextbooks":true}]
