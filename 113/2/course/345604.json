[
  {
    "name": "邱弘緯",
    "email": "hwchiu@ntut.edu.tw",
    "latestUpdate": "2024-12-21 12:36:03",
    "objective": "這門課程深入探討將 AI 技術直接整合至硬體的過程。課程從 AI 晶片的基本概念開始，進一步探討各種 AI 的數位、類比及混合訊號架構。課程內容涵蓋了對神經網路模型映射到晶片硬體的過程及優化。重要的一環是神經網路編譯器的設計與優化，並輔以實務工具和考量以實現高效的 AI 晶片設計。課程還探討了 AI 晶片的當前應用及 AI 硬體發展的未來趨勢。課程以學生專題為導向，將所學知識應用於創新的 AI 晶片解決方案。此課程旨在為學生提供在不斷進化的 AI 硬體領域中取得成功所需的技能和知識。\nThis course, titled \"AI-on-Chip Design: Architectures and Applications,\" offers a deep dive into how AI technologies are integrated directly onto hardware. It begins with fundamental concepts of AI-on-Chip, moving into the intricacies of digital, analog, and mixed-signal architectures tailored for AI applications. The curriculum includes a thorough examination of neural network models, focusing on their optimization and the critical process of mapping these models onto hardware. A significant portion is dedicated to the design and optimization of neural network compilers, supplemented by practical insights into the tools and considerations necessary for efficient AI chip design. The course also explores current applications of AI-on-Chip and anticipates future trends that could reshape AI hardware development. It culminates in a project presentation where students apply what they've learned to create innovative AI-on-Chip solutions. This course equips students with the skills and knowl",
    "schedule": "AI-Chip and Laboratories Course Outline\n1. Introduction to AI and AI-Chip Design\n•\tOverview of AI Hardware Evolution: GPUs, TPUs, and AI-specific hardware\n•\tIntroduction to AI-Chip Architectures: Digital, analog, and mixed-signal approaches\n•\tOverview of AI Workloads and Requirements: Computational demands and data processing needs for AI models\n2. Fundamentals of Chip Design\n•\tDigital Circuit Design Basics: Logic gates, combinational and sequential circuits\n•\tAnalog Circuit Design: Amplifiers, filters, and signal conditioning\n•\tMixed-Signal Circuit Design: ADC, DAC, and their role in AI processing\n3. AI Hardware Architectures\n•\tProcessor Design for AI: Instruction sets, RISC vs. CISC for AI\n•\tAccelerator Design: Introduction to accelerators like GPUs, TPUs, and NPUs\n•\tMemory Architectures: SRAM, DRAM, and memory hierarchies in AI chips\n•\tInterconnects and Data Transfer Protocols: High-speed data transfer, PCIe, NVLink, and memory coherence\n4. Neural Network Processors\n•\tBasics of Neural Network Architecture: Feed-forward, convolutional, and recurrent networks\n•\tDesigning Efficient NN Hardware: Specialized multipliers, accumulators, and activation functions\n•\tOptimization Techniques: Quantization, pruning, and sparsity to enhance performance\n5. AI-Chip Laboratory Setup and Tools\n•\tEDA Tools Overview: Key tools for IC design and simulation (e.g., Cadence, Synopsys, MATLAB/Simulink)\n•\tHardware Descriptive Languages (HDL): VHDL, Verilog, and SystemVerilog basics for AI-chip design\n•\tSimulation and Testing Tools: Using simulators to test functionality, power, and thermal profiles\n6. Compiler and Software Stacks for AI Hardware\n•\tNN Compiler Overview: Compilation techniques for neural network models on hardware\n•\tFirmware and Driver Development: Basic driver development for AI hardware\n•\tSoftware-Hardware Co-design: Balancing computational loads between hardware and software layers\n7. Real-World Applications of AI-Chips\n•\tEdge AI Applications: Low-power, real-time AI applications and the role of AI chips\n•\tData Center Applications: High-performance AI chips for cloud infrastructure\n•\tSpecialized AI Hardware in Industry: Robotics, automotive, and medical applications\n8. Practical Laboratory Work\n•\tLab 1: Basic Digital Logic Circuit Design and Simulation\n•\tLab 2: Analog Signal Processing and Amplification Techniques\n•\tLab 3: Mixed-Signal Processing and ADC/DAC Interfacing\n•\tLab 4: Implementing Neural Network Inference on FPGA\n•\tLab 5: Profiling AI Workloads and Optimizing Performance\n•\tLab 6: Developing and Testing Custom NN Layers for Hardware Execution",
    "scorePolicy": "Homeworks (60%)\nCapstone Project (40%)\n•\tProject Development: Students propose and develop a small-scale AI-chip-related project\n•\tIntegration and Testing: Practical work on implementation, testing, and performance evaluation\n•\tPresentation and Feedback: Final project presentation and feedback session",
    "materials": "Github\nMatab\nPython",
    "consultation": "可以使用 Line 或 Teams 跟老師直接連絡。",
    "課程對應SDGs指標": "SDG4：優質教育（Quality Education）SDG9：產業創新與基礎設施（Industry, Innovation and Infrastructure）",
    "remarks": "需會使用 python 及學過超大型積體電路、最好修過 AI 相關課程及演算法課程。",
    "foreignLanguageTextbooks": true
  }
]
