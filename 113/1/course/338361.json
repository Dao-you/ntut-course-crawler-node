[
  {
    "name": "李旻璁",
    "email": "mtlee@ntut.edu.tw",
    "latestUpdate": "2024-09-06 11:38:35",
    "objective": "課程社群，請用本名加入。\nhttps://line.me/ti/g2/f94Z0tPo2ttOV2fJ5hIDjI3-sfrpjDtAonotuw?utm_source=invitation&utm_medium=link_copy&utm_campaign=default\n=============================================================\nIn this course, you will embark on a journey to master fundamental programming concepts essential for solving engineering problems. We will cover key topics such as loops, conditional statements, input/output operations, and arrays, while applying these concepts to practical engineering scenarios. You’ll learn how to formulate and implement algorithms tailored to specific tasks, enhancing your problem-solving skills. Additionally, we will explore the use of Generative AI tools like ChatGPT, GitHub Copilot, and Replit to assist in coding and algorithm development. You'll gain hands-on experience in using these tools to guide and refine your programming efforts, ensuring that you can effectively justify and apply the information they provide. This course is designed to build your programming proficiency and prepare you for advanced challenges in chemical engineering.",
    "schedule": "Part I: Theory and Tools (2-3 weeks)\n1. Introduction to Programming and GenAI Tools: Overview of the importance of programming in engineering, introduction to Generative AI tools like ChatGPT, GitHub Copilot, and Replit, and their role in coding. Discussing the choice of programming languages and fundamental programming concepts.\n2. Development Environment: Introduction to the Linux platform, vim editor, compilers, interpreters, and data visualization tools such as gnuplot. Focus on data collection, analysis, and visualization techniques.\nPart II: Fundamentals of Programming (7 weeks)\n1. Input and Output: Techniques for reading from and writing to different data sources.\n2. Variables and Declaration: Understanding data types, variable declaration, and scope.\n3. Mathematical Functions: Utilizing built-in math functions for engineering calculations.\n4. Control Structures: Implementing loops (do loops) and conditional statements (if statements) for flow control.\n5. Arrays and Data Handling: Managing and manipulating arrays for efficient data storage and retrieval.\n6. Subroutines and Modules: Creating reusable code with subroutines and modules; introduction to random number generation.\nPart III: Algorithm Development (4-6 weeks)\n1. Data Sorting: Techniques and algorithms for sorting data effectively.\n2. Statistical Analysis: Implementing algorithms for statistical computations and data interpretation.\n3. Probability and Histograms: Coding solutions for probability calculations and histogram generation.\n4. Regression Analysis: Developing algorithms for regression analysis to model and predict data trends.",
    "scorePolicy": "class participation: 5 points x 12 weeks (60%)\nIn-class problem: 10 points x 4 weeks (40%)\n\nThere is no midterm and final in this course. Students need to attend the class in person and answer questions on Zuvio to get scores for class participation. The knowledge acquired in Part II will be applied to solve the special problems in Part III.",
    "materials": "Online resources.",
    "consultation": "Email: mtlee@mail.ntut.edu.tw",
    "課程對應SDGs指標": "無（None）",
    "remarks": "",
    "foreignLanguageTextbooks": false
  }
]
