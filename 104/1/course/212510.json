[{"name":"王正豪","email":"jhwang@ntut.edu.tw","latestUpdate":"2015-06-06 08:37:46","objective":"本課程主要在研討傳統的結構化語言的編譯技術。課程所所涵蓋的內容包括有： - 語句上的分析、語句分析器的製作 - 由上而下的組譯器製作 - 由下而上的組譯器製作 - 語意分析 - 機器碼之產生與暫存器之配置 - 資料流分析的理論與應用 - 程式碼最佳化處理。課程的實施，將以基本編譯技術為主，作深入的介紹。學習所得的觀念與技術，將利用一個實驗性語言編譯器的實作來貫穿。因此，程式規畫實作將在這個課程中佔有相當大的比重。","schedule":"1. Introduction (1 wk)\n2. A Simple Syntax-Directed Translator (2 wks)\n3. Lexical Analysis (2 wks)\n4. Syntax Analysis (2 wks)\n5. Syntax-Directed Translation (1 wk)\n6. Intermediate Code Generation (2 wks)\n7. Run-Time Environments (2 wks)\n8. Code Generation (3 wks)\n9. Term Project/Paper Presentation (3 wks)","scorePolicy":"Homework assignments and programming exercises: 40%\nMid-term exam: 25%\nFinal project or presentation: 35%","materials":"Textbook:\n- Compilers: Principles, Techniques, and Tools, 2nd ed., by Alfred V. Aho, Monica S. Lam, Ravi Sethi, and Jeffrey D. Ullman, Addison-Wesley, 2007. (a.k.a ''The Dragon Book'')\n-  Charles N. Fischer, Ron K. Cytron, and Richard J. LeBlanc Jr., Crafting a Compiler, Global Edition, Pearson Education, Inc., 2009.\nReferences:\n- Crafting a Compiler with C, by Charles N. Fischer and Richard J. LeBlanc Jr., Addison-Wesley, 1991.\n- Engineering a Compiler, by Keith D. Cooper and Linda Torczon, Morgan Kaufmann, 2004.","foreignLanguageTextbooks":false}]
