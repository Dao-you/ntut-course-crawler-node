[{"name":"陳偉凱","email":"wkchen@ntut.edu.tw","latestUpdate":"2013-09-12 12:19:57","objective":"物件導向程式語言已成為當前軟體發展主流語言，利用抽象、封裝、委任、繼承、多形等特性達成軟體設計的彈性、重複使用性等。隨著軟體規模日漸龐大，軟體工程師需更進一步具備更有效的抽象化與重覆使用設計技術，而設計樣式為當前滿足此目標主要的設計方法。本課程以建立此項核心能力為目標。學生須於課後投入約150~200小時完成一個樣式導向軟體設計專題。\n    本課程涵蓋下列主題：\n1　　物件導向式程式設計原理\n2　　單元測試\n3　　設計樣式\n4　　樣式導向設計原理\n5　　樣式導向設計個案研究\n6　　樣式語言\n7　　樣式語言個案研究\n8　　樣式導向軟體設計專題","schedule":"1.　　Introduction (1 week)\nSoftware development process\n2.　　Design patterns (10 weeks)\nCreational patterns, Structural patterns, Behavioral patterns\n3.　　UML diagrams (1 week)\nClass diagrams and interaction diagrams\n4.　　Unit testing (2 weeks)\nGTest\n5.　　Refactoring (1 week)\nCode/peer review, smells, removing bad smells\n6.　　C++ (1 week)\nObject-based programming, Object-oriented programming, Generic programming, STL","scorePolicy":"There will be two exams (a midterm and a final exam). Homework assignments will be given every two weeks. All homework turned in should be work done by you alone. You may not work on homework with other people.\nHomework 60%\nMidterm exam 20%\nFinal exam 20%","materials":"1. Design Patterns, by E. Gamma, etc, Addison-Wesley, 1994.\n2. C++ Primer, 4th Edition, by Stanley B. Lippman, Josee Lajoie, and Barbara E. Moo, Addison Wesley, 2005.","foreignLanguageTextbooks":false}]
