[{"name":"陳恩航","email":"hang@mail.ntcb.edu.tw","latestUpdate":"2014-02-19 16:02:41","objective":"本課程介紹電腦科學中演算法的原理、分析與設計策略，使學生了解各種演算法的設計，訓練如何分析解決實際的問題，以便學生可以設計有效率的電腦演算法程式，進而了解問題的難易，增加實作演算法能力。課程內容包括學習分析一個演算法的複雜度與界定一個問題難度的下界，並完整介紹整套NP-completeness計算理論。其中關於解決問題所使用的有效技巧，課程中將介紹一般常用的「貪婪法」、「各個擊破法」、「樹狀搜尋法」、「修剪與搜尋」、與「動態規劃法」及其它主題。同時課程中也將簡介演算法新的發展方向，包括「近似演算法」、「攤還分析」、「隨機演算法」、「線上演算法」等概念。最後並透過相關論文的研讀及討論，以了解近代演算法的最新發展趨勢。","schedule":"第一週 課程簡介\n第二週 The Complexity of Algorithms\n第三週 The Lower Bounds of Problems(1)\n第四週 The Lower Bounds of Problems(2)\n第五週 The Greedy Method(1)\n第六週 The Greedy Method(2)\n第七週 The Divide-and-Conquer Strategy(1)\n第八週 The Divide-and-Conquer Strategy(2)\n第九週 期中考\n第十週 Tree Searching Strategies(1)\n第十一週 Tree Searching Strategies(2)\n第十二週 Prune-and-Search Strategy(1)\n第十三週 Prune-and-Search Strategy(2)\n第十四週 Dynamic Programming(1)\n第十五週 Dynamic Programming(2)\n第十六週The Theory of NP-Completeness(1)\n第十七週 The Theory of NP-Completeness(2)\n第十八週 期末考","scorePolicy":"期中考：40%\n期末考：50%\n平時分數：10% (點名至少三次)","materials":"Introduction to the Design and Analysis of Algorithms,2E, Anany Levitin\nFoundations of Algorithms Using C++ Pseudocode, Richard Neapolitan and Kumarss","foreignLanguageTextbooks":false}]
