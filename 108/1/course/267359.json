[{"name":"楊元森","email":"ysyang@ntut.edu.tw","latestUpdate":"2019-09-04 10:19:35","objective":"Scientific visualization is the use of computer graphics to visually represent the composite meaning of the large amount of data obtained by scientific computation, extensive monitoring, or engineering experiments. The scientific visualization in this semester focuses on the advanced C/C++ programming skills and computer vision, visualization, and practical applications.","schedule":"Week 1: Introduction to Computer Vision and Visualization\nWeek 2: Installation of C++ Development with Qt and OpenCV\nWeek 3: Graphical User Interface Development using C++/Qt (I)\nWeek 4: Graphical User Interface Development using C++/Qt (II) with OpenCV\nWeek 5: Documentation \nWeek 6: Version Control and Maintenance\nWeek 7: 2D Coordinate Transformation (I): Theory and formula\nWeek 8: 2D Coordinate Transformation (II): C/C++ Programming Exercises\nWeek 9: Midterm: Rapid Programming and Documentation\nWeek 10: 3D Coordinate Transformation (I): Theory and Formula\nWeek 11: 3D Coordinate Transformation (II): Camera Model\nWeek 12: 3D Coordinate Transformation (III): C/C++ Programming Exercises\nWeek 13: Camera Calibration \nWeek 14: Machine Learning Basics\nWeek 15: Machine Learning Exercises\nWeek 16: Final Project Opening Discussion (I)\nWeek 17: Final Project Opening Discussion (II)\nWeek 18: Final Project Presentations","scorePolicy":"1. Lecture activities (attendance, interaction, lecture assistance) (30% +/- 5%)\n2. Midterm (20% +/- 5%)\n3: Final Presentation (20% +/- 5%)\n4: Final Report (30% +/- 5%)","materials":"Kaehler, A. &amp; Bradski G. R. (2017), Learning OpenCV 3: Computer Vision in C++ with the OpenCV Library. (ISBN-13: 978-1491937990)","foreignLanguageTextbooks":true}]
