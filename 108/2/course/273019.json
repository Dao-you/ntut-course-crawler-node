[{"name":"鄭有進","email":"yccheng@ntut.edu.tw","latestUpdate":"2020-03-30 20:43:20","objective":"1.　　Basic systems concepts important to concurrent computing\n2.　　Multi-process and multithreaded programming basics\n3.　　Race conditions, critical sections, and synchronization\n4.　　Pure software and hardware solutions and proof techniques for mutual exclusion\n5.　　Synchronization primitives (i.e., semaphores, mutex locks, monitors of Hoare and Mesa types, basic message passing)\n6.　　Deadlocks and livelocks\n7.　　Survey of some languages (e.g., Java and Ada) and libraries (e.g., Pthreads)","schedule":"Topics Covered\nWeek 1-2: Basic systems concepts important to concurrent computing\nWeek 3-5: Multi-process and multithreaded programming basics\nWeek 6-8: Race conditions, critical sections, and synchronization\nWeek 9-11:Pure software and hardware solutions and proof techniques for mutual exclusion\nWeek 12-14:Synchronization primitives (i.e., semaphores, mutex locks, monitors of Hoare and Mesa types, basic message passing)\nWeek 15-16: Deadlocks and livelocks\nWeek 17: Survey of some languages (e.g., Java and Ada) and libraries (e.g., Pthreads)\nWeek 18: final exam","scorePolicy":"5-6 programming assignments: 50%\ntwo midterms plus quiz: 25%\none final: 25 %","materials":"There is no suitable textbook for this course. All slides used in class and supporting materials are available\n\nhttp://www.csl.mtu.edu/cs3331.ck/www/3331-slides.html","foreignLanguageTextbooks":false}]
