[{"name":"劉傳銘","email":"cmliu@ntut.edu.tw","latestUpdate":"2014-05-07 20:11:34","objective":"1. 數學基礎 1.1 函數成長率之漸近性質 1.2 遞迴關係之解        1.3 數學歸納法 2. 基本分析技巧 2.1 計算複雜度之上下限2.2 最差情況分析及平均情況分析 2.3 動態平均分析 3. 基本設計技巧 3.1 分擊法 3.2 貪婪法 3.3 動態規劃 3.4 隨機演算法 4. 計算複雜度 4.1 資訊理論證明法 4.2 對抗式證明法 4.3 問題之線性轉換 4.4 完全NP","schedule":"1. Introduction (0.5 week)\n2. Asymptotic analysis (1.5 weeks)\n3. Recurrence Relations (1 week)\n4. Advanced Data Structures (2 weeks)\n5. Average and worst analysis (1 weeks)\n6. Lower Bounds (1 week)\n7. Dynamic Programming (2 weeks)\n8. Graph algorithms (1.5 weeks)\n9. Search and Traversal Techniques (1.5 week)\n10. NP-Completeness (2 weeks)\n11. Approximation Algorithms (1 week)\n12. New Trends in Algorithms (2 weeks)\n(* 1 week for exams, including midterm and final)","scorePolicy":"Assignments (40%): 7-9 homework sets.\nMidterm (25%)\nFinal exam (35%)","materials":"Textbook:\nIntroduction to Algorithms, 3nd edition.  T. Cormen, C. Leiserson, R. Rivest, and C. Stein. MIT Press Edition, 2009.\nReferences:\n1. Computer Algorithms /C++, 2nd Edition. E. Horowitz, S. Sahni, and S. Rajasekaran, W.H. Freeman and Company, 1998.\n2. Computer Algorithms, 3rd edition. S. Baase and A. V. Gelder. Addison-Wesley, 2000.\n3. Algorithms in C++, 3rd. R. Sedgewick. Addison-Wesley, 1998.\n4. Algorithms, R. Johnsonbaugh and M. Schaefer, Pearson Prentice Hall, 2004.\n5. Algorithm Design, Jon Kleinberg and ?va Tardos, Pearson/Addison-Wesley, 2006.\n6. Algorithms, Sanjoy Dasgupta, Christos Papadimitriou, Umesh Vazirani, McGraw-Hill, 2008. ISBN:978-007-125975-0.","foreignLanguageTextbooks":false}]
