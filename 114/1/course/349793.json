[
  {
    "name": "楊侑倫",
    "email": "y.yang@ntut.edu.tw",
    "latestUpdate": "2025-05-27 21:04:46",
    "objective": "This course provides a comprehensive introduction to numerical methods and their application in solving scientific and engineering problems.\n本課程旨在全面介紹數值方法及其在解決科學與工程問題上之應用。\nStudents will learn to translate real-world problems into mathematical models and apply various numerical algorithms for their solution.\n學生將學習如何將實際問題轉化為數學模型，並應用各種數值演算法進行求解。\nKey topics include mathematical modeling, error analysis, linear algebra, interpolation, approximation, numerical integration and differentiation, solving ordinary and partial differential equations, Monte Carlo methods, optimization, and an introduction to numerical methods in data science and high-performance computing.\n主要內容包括數學建模、誤差分析、線性代數、內插法、逼近法、數值積分與微分、常微分與偏微分方程求解、蒙地卡羅方法、數值優化，以及數據科學與高效能計算中數值方法之簡介。\nThe course emphasizes hands-on experience through in-class programming sessions and utilizes online weeks for flexible learning.\n本課程強調透過課堂程式設計實作獲得實務經驗，並利用線上教學週進行彈性學習。\n\n課程重要事項 (Important Course Notes)\n\nBilingual Instruction (雙語教學): This course will be conducted with materials and explanations provided in both English and Chinese to support diverse learning needs. 本課程將以中英文雙語提供教材與解說，以支持多元學習需求。\nLanguage of Assessment (評量語言): Major assignments, presentations, and examinations are required to be completed in English. 主要作業、報告及考試需以英文完成。\nProgramming Sessions (程式設計實作課): This course includes several in-class programming sessions. 本課程包含數次課堂程式設計實作。 Active participation and completion of programming tasks are mandatory. 學生必須積極參與並完成程式設計作業。\nOnline Teaching Weeks (線上教學週): Specific weeks will be conducted online. 特定教學週將採線上教學。 Students are expected to engage with materials and activities as directed on the [LMS/Email/Course Website]. 學生應依循 [學習管理系統 (LMS)/ 電子郵件 / 課程網站] 之指示參與課程材料與活動。\nAttendance Policy (出席規定): Students who are absent three (3) or more times (including programming sessions and online sessions where applicable) during the semester will automatically receive a failing grade for the course. 一學期內缺席三（3）次（含以上，適用於程式設計實作課與線上課程應參與部分）者，該課程成績以不及格計。(缺席三次不及格)",
    "schedule": "Week 1 (第一週):\nCourse Introduction and Overview\n課程簡介與總覽\nIntroduction to Numerical Methods\n數值方法導論\nMathematical Modeling and Problem-Solving with Computers\n利用計算機進行數學建模與問題求解\n\nWeek 2 (第二週):\nFoundations of Numerical Computing\n數值計算基礎\nNumerical Computing Languages (e.g., Python/MATLAB overview)\n數值計算語言 (例如 Python/MATLAB 概覽)\nFloating-Point Arithmetic and Representation\n浮點數運算與表示法\n\nWeek 3 (第三週): (Programming Session / 程式設計實作課)\nProgramming Session #1: Implementing Basic Numerical Algorithms & Translating Models to Code\n程式設計實作 #1：基本數值演算法實現與模型程式碼轉換\n(Based on \"Mathematical Modeling Techniques\" and \"Introduction to Numerical Algorithms\")\n(基於「數學建模技術」與「數值演算法導論」)\nTranslating Real-World Problems into Mathematical Models\n將實際問題轉化為數學模型\nIntroduction to Numerical Algorithms\n數值演算法導論\n\nWeek 4 (第四週): (Online Teaching / 線上教學)\nError Analysis\n誤差分析\nNumerical Accuracy, Stability, and Round-Off Errors\n數值準確性、穩定性與捨入誤差\n\nWeek 5 (第五週):\nLinear Algebra - Basic Concepts\n線性代數 - 基本概念\nMatrix Operations and Computational Aspects\n矩陣運算與計算觀點\nSystems of Linear Equations\n線性聯立方程式\n\nWeek 6 (第六週):\nLinear Algebra - Advanced Concepts\n線性代數 - 進階概念\nDirect and Iterative Methods for Solving Linear Systems\n求解線性系統之直接法與迭代法\nEigenvalue Problems and Decompositions\n特徵值問題與分解\n\nWeek 7 (第七週): (Programming Session / 程式設計實作課)\nProgramming Session #2: Coding Interpolation and Approximation Techniques\n程式設計實作 #2：內插法與逼近法技術程式編寫\n(Based on \"Interpolation and Approximation\")\n(基於「內插法與逼近法」)\nPolynomial and Spline Interpolation\n多項式與樣條內插法\nApproximation Theory\n逼近理論\n\nWeek 8 (第八週): (Online Teaching / 線上教學)\nNumerical Integration and Differentiation\n數值積分與微分\nTechniques for Numerical Integration (e.g., Trapezoidal, Simpson's rule)\n數值積分技巧 (例如梯形法、辛普森法)\nNumerical Differentiation\n數值微分\n\nWeek 9 (第九週): (Midterm Exam & Programming Session / 期中考試 & 程式設計實作課)\nMidterm Exam ; Programming Session #3: Introduction to ODE Solvers\n期中考試 ；程式設計實作 #3：常微分方程求解器入門\n(Midterm covers Weeks 1-8)\n(期中考範圍為第一至八週)\n(Programming based on \"Solving Ordinary Differential Equations (ODEs)\")\n(程式設計基於「常微分方程 (ODE) 求解」)\nNumerical Methods for ODEs (e.g., Euler's Method, basic Runge-Kutta)\n常微分方程數值方法 (例如歐拉法、基本龍格庫塔法)\nInitial and Boundary Value Problems\n初始值與邊界值問題\n\nWeek 10 (第十週):\nSolving Partial Differential Equations (PDEs)\n偏微分方程 (PDE) 求解\nNumerical Methods for PDEs\n偏微分方程數值方法\nFinite Difference and Finite Element Methods (Introduction)\n有限差分法與有限元素法 (導論)\n\nWeek 11 (第十一週):\nMonte Carlo Methods\n蒙地卡羅方法\nMonte Carlo Simulations\n蒙地卡羅模擬\nApplications in Science and Engineering\n於科學與工程之應用\n\nWeek 12 (第十二週): (Programming Session / 程式設計實作課)\nProgramming Session #4: Implementing Basic Optimization Algorithms\n程式設計實作 #4：基本優化演算法實現\n(Based on \"Numerical Optimization\")\n(基於「數值優化」)\nConcepts in Optimization\n優化概念\nGradient-Based Methods (e.g., Gradient Descent)\n梯度型方法 (例如梯度下降法)\n\nWeek 13 (第十三週): (Online Teaching / 線上教學)\nAdvanced Topics in Numerical Linear Algebra\n數值線性代數進階專題\nSparse Matrix Techniques\n稀疏矩陣技術\nAdvanced Decomposition Methods\n進階分解方法\n\nWeek 14 (第十四週):\nNumerical Methods in Data Science\n數據科學中之數值方法\nData Fitting and Regression Techniques\n數據擬合與迴歸技術\nIntroduction to Machine Learning Algorithms (from a numerical perspective)\n機器學習演算法簡介 (從",
    "scorePolicy": "The final grade will be determined based on the following components:\n課程總成績將依下列項目評定：\n\nHomework / Programming Assignments (作業 / 程式設計功課): 40%\nMidterm Exam (期中考試): 25%\nFinal Exam (期末考試): 25%\nFinal Project & Presentation (期末專題與報告): 10%",
    "materials": "Applied Numerical Methods with MATLAB/Python\" by Chapra\n\nCourse Materials (課程教材): Self-made materials / Instructor-provided notes. 自編教材 / 教師提供講義。",
    "consultation": "Microsoft Teams",
    "課程對應SDGs指標": "無（None）",
    "課程是否導入AI": "● 使用生成式 AI 作為教學過程的輔助工具（Use generative AI tools as an aid to the teaching process）● 鼓勵學生使用生成式 AI 工具（Encourage students to use generative AI tools）● 使用生成式 AI 進行課堂即時互動（Use generative AI for real-time classroom interaction）● 簡單介紹 AI 的基本概念（Briefly introduce the basic concept of AI）● 深入探討 AI 的原理與應用（Explore the principles and applications of AI in depth）",
    "remarks": "",
    "foreignLanguageTextbooks": true
  }
]
