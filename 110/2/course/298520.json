[
  {
    "name": "陳建村",
    "email": "teddy.chen.tw@gmail.com",
    "latestUpdate": "2021-12-28 09:57:39",
    "objective": "軟體架構的目的在於最小化建構與維護軟體系統所需的人力資源，透過建立多種架構觀點、管理相依性、模組化等技巧，各種不同架構模式應運而生。本課程的主要目的在於培養學生具備分析與實作簡潔軟體架構的能力。課程採用課堂講解、互動問答討論與實作，包含一個專案開發，全班同學將分組共同開發一個軟體。修課同學最好具備物件導向、設計模式之基本能力。\n\n課程內容涵蓋簡潔架構（Clean Architecture）與領域驅動設計（Domain-Driven Design）。",
    "schedule": "週次　　內容\n1　　課程介紹、軟體架構簡介、開發專案說明\n2　　From Requirement to Architecture: Big Picture Event Storming\n3　　Design-Level Event Storming Workshop\n4　　Iteration 0 : Prepare the architecture and development environment (Iteration 1 starts)\n5      Bounded Context, Context Map, Domain Model, and Ubiquitous Language \n6　　DDD Building Blocks \n7　　Iteration 1 Review\n8　　Domain Event\n9　　期中考；\n10　　Iteration 2 Review\n11　　Event Sourcing and CQRS\n12　　Clean Architecture and DDD Review\n13　　Iteration 3 Review\n15　　Selected Topics 1\n16　　Selected Topics 2\n17　　Iteration 4 Review (Final Review，期末考)\n18　　Exception Handling and Architecture",
    "scorePolicy": "1. 作業 40%\n2. 期中考 20\n3. 期末考 30%\n4. 上課表現 10%",
    "materials": "Text Books:\n\n1. Clean Architecture by Robert C. Martin.\n2. Domain-Driven Design: Tackling Complexity in the Heart of Software by Eric Evans\n\nReferences:\n\n1. Patterns, Principles, and Practices of Domain-Driven Design by Scott Millett and Nick Tune\n2. Implementing Domain-Driven Design by Vaughn Vernon",
    "foreignLanguageTextbooks": true
  }
]
