[
  {
    "name": "賴冠廷",
    "email": "ktlai@ntut.edu.tw",
    "latestUpdate": "2022-01-03 12:05:12",
    "objective": "物件導向程式設計是一種具有物件概念的程式設計方法。本課程以 Java 為主，C++ 為輔。讓同學們從實做中學習物件導向的開發概念，內容包括:\n1. 類別 (Class) 介紹，2. 物件導向與資料抽象化，3. 類別與方法，4. . 繼承，5. 靜態與動態繫結，6. 多型性，7. Java 開發環境及工具，8. 各種設計模式介紹 (Design Patterns)\n\nObject-oriented programming (OOP) is a programming paradigm based on the concept of \"objects\", which usually defined as “class” in programming language like C++ and Java. In this class we will introduce the basic concepts of OOP, such as object, class, encapsulation, inheritance, and polymorphism. Java is the primary language used in the class, but we will also cover OOP in C++. We hope this class will help you understand OOP concepts as well as be ready for developing high-quality software.",
    "schedule": "Concepts of Object-Oriented Programming (OOP)\n1. Introduction to Object Oriented Programming\n    Object, Class, Inheritance, Polymorphism\n2. OOP in C++\n3. Java Basics and OOP in Java\n4. NetBeans &amp; Java Swing\n5. Debugging &amp; Unit Testing + GitHub\n6. OOP Encapsulation\n7. OOP Inheritance\n8. Design Patterns I\n9. Midterm\n* Final Project Proposal\n9. Design Patterns II\n10. Design Patterns III\n11. Threading\n12. Presentation of Final Project Proposal\n13. Internet &amp; Socket programming\n14. Final Project Demo \n15. Final Exam",
    "scorePolicy": "Homework (40%)\nMidterm &amp; Final exam (40%)\nFinal project (20%)",
    "materials": "Erich Gamma, John Vlissides, Richard Helm, Ralph Johnson, \"Design Patterns: Elements of Reusable Object-Oriented Software,\" Addison Wesley, 1997\nISBN13 9780201633610\n\nStanford CS108 Object Oriented System Design\nhttp://web.stanford.edu/class/archive/cs/cs108/cs108.1092/",
    "foreignLanguageTextbooks": true
  }
]
