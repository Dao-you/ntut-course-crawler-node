[
  {
    "name": "\n  鄭有進　教師諮商時間(Office Hours) ",
    "email": "yccheng@ntut.edu.tw",
    "latestUpdate": "2022-09-09 14:59:13",
    "objective": "物件導向程式語言已成為當前軟體發展主流語言，利用抽象、封裝、委任、繼承、多形等特性達成軟體設計的彈性、重複使用性等。隨著軟體規模日漸龐大，軟體工程師需更進一步具備更有效的抽象化與重覆使用設計技術，而設計樣式為當前滿足此目標主要的設計方法。本課程以建立此項核心能力為目標。學生須於課後投入約 150~200 小時完成一個樣式導向軟體設計專題。\n    本課程涵蓋下列主題：\n1　　物件導向式程式設計原理\n2　　單元測試\n3　　設計樣式\n4　　樣式導向設計原理\n5　　樣式導向設計個案研究\n6　　樣式語言\n7　　樣式語言個案研究\n8　　樣式導向軟體設計專題",
    "schedule": "Week 1-3. Review of OOP principles, development methods, and unit testing through example\nWeek 4-7. Design patterns, by example\nWeek 8. Midterm - Lab 1 \nWeek 10-15 Design patterns, by example\nWeek 16. Midterm - Lab 2\nWeek 17. Pattern languages\nWeek 18. Final",
    "scorePolicy": "Homework*6: 40%\nMidterm 1 (Lab test): 20%\nMidterm 2 (Lab test): 20%\nFinal (Pen-and-paper test): 20%",
    "materials": "Course repository: http://140.124.181.100/yccheng/posd2022f\n(You must use NTUT vpn to access this site)\n\nTextbook: \nGamma, Erich, et al. Design patterns: elements of reusable object-oriented software. Pearson Education, 1994.\n\nReference books:\n1. Martin, Robert C. Clean code: a handbook of agile software craftsmanship. Pearson Education, 2008.\n\n2. Alexander, Christopher, Sara Ishikawa, and Murray Silverstein. \"A pattern language.\"",
    "foreignLanguageTextbooks": true,
    "remarks": "Send mail contact on the course repository"
  }
]
